(dp1
S'output'
p2
S"<type 'exceptions.AttributeError'> "
p3
sS'layer'
p4
S'/ug/ug2k15/cse/shivaganesh.y/web2py/applications/assgn_ans/controllers/default.py'
p5
sS'code'
p6
S'postperpage=3\n@auth.requires_login()\ndef index():\n    response.view=\'default/index.html\'\n    page=request.args(0,cast=int,default=0)\n    start=page*postperpage\n    stop=start+postperpage\n    rows = db().select(db.image.ALL,orderby=~db.image.created_on,limitby=(start,stop))\n    return locals()\n    \n\ndef user():\n    return dict(form=auth())\n\ndef create_post():\n    x = db().select(db.image.title,db.image.file,db.image.author,db.image.body)\n    form = SQLFORM(x).process()\n    if form.accepted:\n        redirect(URL(\'index\',vars=dict(id=form.vars.id)))\n    return dict(form=form)\n\n@cache.action()\ndef download():\n    return response.download(request, db)\n\n\ndef call():\n    return service()\ndef show():\n        image = db.image(request.args(0,cast=int)) or redirect(URL(\'index\'))\n        return dict(image=image)\ndef myrecipe():\n    response.view=\'default/myrecipe.html\'\n    page=request.args(0,cast=int,default=0)\n    start=page*postperpage\n    stop=start+postperpage\n    rows = db(db.image.imageid==auth.user_id).select(db.image.ALL,orderby=~db.image.created_on,limitby=(start,stop))\n    return locals()\n\ndef editrecipes():\n    id=request.args(0,cast=int)\n    form=SQLFORM(db.image,id)\n    if form.process().accepted:\n        redirect(URL(\'myrecipe\',vars=dict(id=form.vars.id)))\n    return dict(form=form)\n    \ndef vote_callback():\n    vars=request.post_vars\n    if vars and auth.user:\n        id=vars.id\n        direction1=+1 if vars.direction=="up" else -1\n        image=db.image(id)\n        if image:\n            vote=db.vote(image_id=id,posted_by=auth.user.id)\n            if not vote:\n                image.update_record(votes=int(image.votes)+direction1)\n                db.vote.insert(image_id=id,score=direction1,posted_by=auth.user.id)\n            elif vote.score!=direction1:\n                image.update_record(votes=int(image.votes)+direction1*2)\n                vote.update_record(score=direction1)\n            else:\n                pass\n        print image.votes\n    return str(image.votes)\n\nresponse._vars=response._caller(create_post)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/ug/ug2k15/cse/shivaganesh.y/web2py/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/ug/ug2k15/cse/shivaganesh.y/web2py/applications/assgn_ans/controllers/default.py", line 66, in <module>\n  File "/ug/ug2k15/cse/shivaganesh.y/web2py/gluon/globals.py", line 412, in <lambda>\n    self._caller = lambda f: f()\n  File "/ug/ug2k15/cse/shivaganesh.y/web2py/applications/assgn_ans/controllers/default.py", line 17, in create_post\n    form = SQLFORM(x).process()\n  File "/ug/ug2k15/cse/shivaganesh.y/web2py/gluon/sqlhtml.py", line 1106, in __init__\n    (ignore_rw or f.writable or f.readable) and\n  File "/ug/ug2k15/cse/shivaganesh.y/web2py/gluon/packages/dal/pydal/objects.py", line 90, in __getattr__\n    raise AttributeError\nAttributeError\n'
p11
s.