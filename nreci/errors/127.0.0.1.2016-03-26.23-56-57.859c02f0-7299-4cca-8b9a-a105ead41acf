(dp1
S'output'
p2
S"<type 'exceptions.AttributeError'> 'DAL' object has no attribute 'auth'"
p3
sS'layer'
p4
S'/home/siddhartha/web2py/applications/nreci/controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n#########################################################################\n## This is a sample controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n#########################################################################\n@auth.requires_login()\ndef index():\n    """\n    example action using the internationalization operator T and flash\n    rendered by views/default/index.html or views/generic.html\n\n    if you need a simple wiki simply replace the two lines below with:\n    return auth.wiki()\n        """\n    recipes=db().select(db.recipe.id,db.recipe.title,db.recipe.summary,db.recipe.image)\n    return dict(recipes=recipes)\n@auth.requires_login()\ndef create():\n    form=SQLFORM(db.recipe).process(next=URL(\'index\'))\n    return dict(form=form)\n@auth.requires_login()\ndef show():\n    this_page = db.recipe(request.args(0,cast=int)) or redirect(URL(\'index\'))\n    return dict(recipe=this_page)\n@auth.requires_login()\ndef mrecis():\n    recipes=db(db.recipe.created_by==db.auth.user_id).select(db.recipe.id,db.recipe.title,db.recipe.summary,db.recipe.image)\n    return dict(recipes=recipes)\ndef register():\n    return dict(form=auth.register())\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    http://..../[app]/default/user/bulk_register\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    also notice there is http://..../[app]/appadmin/manage/auth to allow administrator to manage users\n    """\n    return dict(form=auth())\n\n\n@cache.action()\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request, db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\nresponse._vars=response._caller(mrecis)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/siddhartha/web2py/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/home/siddhartha/web2py/applications/nreci/controllers/default.py", line 72, in <module>\n  File "/home/siddhartha/web2py/gluon/globals.py", line 412, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/siddhartha/web2py/gluon/tools.py", line 4236, in f\n    return action(*a, **b)\n  File "/home/siddhartha/web2py/applications/nreci/controllers/default.py", line 31, in mrecis\n    recipes=db(db.recipe.created_by==db.auth.user_id).select(db.recipe.id,db.recipe.title,db.recipe.summary,db.recipe.image)\n  File "/home/siddhartha/web2py/gluon/packages/dal/pydal/base.py", line 921, in __getattr__\n    return BasicStorage.__getattribute__(self, key)\nAttributeError: \'DAL\' object has no attribute \'auth\'\n'
p11
s.